
seed 
    color buffer, framebuffer ... 
    double mode, (glut display mode? )

    
    intro.
        TC 的老旧图形接口
        OpenGL 是一个工业标准，它的技术紧跟时代，现今各个显卡厂家无一不对 OpenGL 提供强力支持，
    _basic_offline learnopengl_ok
    Rendering Pipeline
        ...
    GLUT related
        The OpenGL Utility Toolkit, can be used to render the gui fw 
        The original GLUT has been unsupported for 20 years
        freeglut now 
        本来 OpenGL 程序一般还要包含<GL/gl.h>和<GL/glu.h>, 但是glut进行了一定程度的封装
        以 glut 开头的函数都是该库提供的
        it has not only window sys. 
        qq what kinds of func. are provided in glut? 
            func. 
                window sys. 
                    GLUTAPI void APIENTRY glutInitWindowPosition(int x, int y);
                    GLUTAPI void APIENTRY glutInitWindowSize(int width, int height);
                    GLUTAPI void APIENTRY glutMainLoop(void);
                    glutCreateSubWindow
                    glutFullScreen
                overlay 
                    glutShowOverlay
                menu 
                    glutCreateMenu
                set timer 
                    glutTimerFunc
                mouse, key 
                    glutIgnoreKeyRepeat
                pre-built models
                    glutWireTorus, glutSolidTorus
                    GLUTAPI void APIENTRY glutWireDodecahedron(void);
                    GLUTAPI void APIENTRY glutSolidDodecahedron(void);
                    GLUTAPI void APIENTRY glutWireSphere(GLdouble radius, GLint slices, GLint stacks);
                    GLUTAPI void APIENTRY glutSolidSphere(GLdouble radius, GLint slices, GLint stacks);
                    GLUTAPI void APIENTRY glutWireCone(GLdouble base, GLdouble height, GLint slices, GLint stacks);
                    GLUTAPI void APIENTRY glutSolidCone(GLdouble base, GLdouble height, GLint slices, GLint stacks);
                    GLUTAPI void APIENTRY glutWireCube(GLdouble size);
                    GLUTAPI void APIENTRY glutSolidCube(GLdouble size);
                    GLUTAPI void APIENTRY glutWireTorus(GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings);
                    GLUTAPI void APIENTRY glutSolidTorus(GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings);
                    GLUTAPI void APIENTRY glutWireDodecahedron(void);
                    GLUTAPI void APIENTRY glutSolidDodecahedron(void);
                    GLUTAPI void APIENTRY glutWireTeapot(GLdouble size);
                    GLUTAPI void APIENTRY glutSolidTeapot(GLdouble size);
                    GLUTAPI void APIENTRY glutWireOctahedron(void);
                    GLUTAPI void APIENTRY glutSolidOctahedron(void);
                    GLUTAPI void APIENTRY glutWireTetrahedron(void);
                    GLUTAPI void APIENTRY glutSolidTetrahedron(void);
                    GLUTAPI void APIENTRY glutWireIcosahedron(void);
                    GLUTAPI void APIENTRY glutSolidIcosahedron(void);
                
            field 
                mouse/keyboard interaction 
                    /* Mouse buttons. */
                    #define GLUT_LEFT_BUTTON		0
                    #define GLUT_MIDDLE_BUTTON		1
                    #define GLUT_RIGHT_BUTTON		2    
                Menu
                right click menu 
                define the shape of a corsor 
                    GLUT_CURSOR_INFO
        GLUT_SINGLE 表示使用单缓冲，与之对应的还有 GLUT_DOUBLE（使用双缓冲）
        glutDisplayFunc，设置一个函数，当需要进行画图时，这个函数就会被调用。（这个说法不够准确
        glClear 函数还可以清除其它的东西
        glFlush，保证前面的 OpenGL 命令立即执行
        qq why always use triangles? 
            OpenGL 为了效率，放宽了检查，这可能导致显示错误。要避免这个错误，尽量使用
            三角形，因为三角形都是凸多边形）
    gl related func. (Legacy mode)
        ---OpenGL入门教程---
        ---basic func. 
        glVertex — specify a vertex
        qq what does this mean? glVertex3fv 
            (spec. logical "points")
            glVertex commands are used within glBegin/glEnd pairs to specify point, line, and polygon vertices
            The current color, normal, texture coordinates, and fog coordinate are associated with the vertex when glVertex is called.
            *Invoking glVertex outside of a glBegin/glEnd pair results in undefined behavior.
        qq OpenGL 是如何知道我想拿这些顶点来干什么呢？是一个一个的画出来，还是连成线？或者构成一个多边形？或者做其它什么事情？
            OpenGL 要求：指定顶点的命令必须包含在 glBegin 函数之后，glEnd 函数之前
            并由 glBegin 来指明如何使用这些点。
            (glBegin)
            Specifies the primitive or primitives that will be created from vertices
            group of like primitives
            specifies in which of ten ways the vertices are interpreted.
            GL_LINES
                Treats each *pair of vertices as an independent line segment.    
            GL_LINE_STRIP
                Draws a connected group of line segments from the first vertex to the last.
            GL_TRIANGLES
                Treats each *triplet of vertices as an independent triangle.
            GL_TRIANGLE_STRIP
                For odd n, vertices n, n + 1 , and n + 2 define triangle n. For even n, vertices n + 1 , n, 
                    and n + 2 define triangle n. N - 2 triangles are drawn.
            GL_TRIANGLE_FAN
                all the vertices need to go around the central vertex
            GL_POLYGON
                Draws a single, convex polygon. Vertices 1 through N define this polygon.
        task- draw a fan with lines, draw polygon...
        task- draw line with timer func. (anim. )
        task- 画一个圆, 画一个五角星 op6 画出正弦函数的图形 
        qq given vertices data and opengl draw command, say, what will happen 
        qq can it be a complete circle when using line GL_LINE_STRIP? n how to make it complete? 
        h- glBegin 其实是在设置opengl状态，glVertex...是在发送数据到gpu
        大家可以发挥自己的想象，画出各种几何图形或者各种函数图像--辅助数学的学习是可以做到的
        ---设置样式
        点的大小默认为 1 个像素，但也可以改变之。改变的命令为 glPointSize
        qq how points be represented in opengl? circle or square? s. 
        glPointSize:
        + naming convention
            + a naming convention is a set of rules for choosing the 
                character sequence to be used for identifiers which denote variables, types, functions
                enable code reviews to focus on more important issues than arguing over syntax and naming standards.
                with partisans of each holding theirs to be the best and others to be inferior.
                Many companies have also established their own set of conventions.
            little camel-case
            big camel-case
            snake case naming style
                practice of writing compound words or phrases
                elements are separated with one underscore character (_) and no spaces
                usually lowercased within the compound
                Naming convention
        h- opengl uses small camel naming style 
        可以设置样式--使用 glLineStipple 来设置虚线的样式
        使用pattern与factor控制样式，具体由gl来计算
        task- draw LINE_STIPPLE with opengl 
        ---
        一个多边形具有两个面。每一个面都可以设置不同的绘制方式：填充、只绘制边缘轮:GL_FILL, GL_LINE, GL_POINT 
        glPolygonMode(GL_FRONT, GL_FILL); 
        可以交换正反概念：glFrontFace(GL_CCW); // 设置 CCW 方向为“正面”，CCW 即 CounterClockWise，逆时针， CW 
        使用 glEnable(GL_CULL_FACE);来启动剔除功能（使用 glDisable(GL_CULL_FACE)可以关闭之）
        然后，使用 glCullFace 来进行剔除。
        glCullFace 的参数可以是 GL_FRONT，GL_BACK 或者 GL_FRONT_AND_BACK，分别表示剔除正面、剔
            除反面、剔除正反两面的多边形。
        使用 glCullFace(GL_FRONT_AND_BACK) 后，所有的多边形都将被剔除，所以看见的就只有点和直线。
        qq does it has influ. for points and lines? n 
        qq what happends if we do glCullFace(GL_FRONT_AND_BACK)? what can be seen from the scene still? 
        qq 默认是关闭的？（至少直接模式下，性能没有被考虑--默认faceculling是disabled）
        直线可以被画成虚线，而多边形则可以进行镂空。
        glEnable(GL_POLYGON_STIPPLE);来启动镂空模式
        参数 mask 指向一个长度为 128 字节的空间，它表示了一个 32*32 的矩形应该如何镂空
        使用 glPolygonStipple 来设置镂空的样式
        h- 这些细节会使我们在一些图象绘制中更加得心应手。
        可以把一些数据写到程序之外的文件中，并用专门的工具编辑之
        ---
        两种颜色模式
            一种是 RGBA，一种是颜色索引模式
        RGBA 模式中，数据直接就代表了颜色；而颜色索引模式中，数据代表的是一个索引，要得到真正的颜色，还必须去查索引表
        glColor*系列函数可以用于设置颜色
        glColor3f(1.0f, 0.0f, 0.0f); 表示不使用绿、蓝色，而将红色使用最多，于是得到最纯净的红色
        如果 OpenGL 找不到精确的颜色，会进行类似“四舍五入”的处理。
        qq 如何设置颜色？用一个shader模拟一下
        OpenGL 并直接没有提供设置颜色表的方法，因此设置颜色表需要使用操作系统的支持。
        OpenGL 工具包：aux。这个工具包是 VisualStudio 自带的，不必另外安装，但它已经过时
        在 RGB 模式下，使用 glClearColor 来指定“空”的颜色
        ext+
            glClear（）
            函数的作用是用当前缓冲区清除值
            第一条语句表示清除颜色设为黑色，第二条语句表示实际完成了把整个窗口清除为黑色的任务--glClear 
            qq if we only have glClearColor（0.0，0.0，0.0，0.0）; what can be the result 
            像素检验、裁剪检验、抖动和缓存的写屏蔽都会影响glClear的操作，其中，裁剪范围限制了清除的区域，而glClear命令还会
                忽略alpha函数、融合函数、逻辑操作、模板、纹理映射和z缓存
        OpenGL 会计算两点顶点之间的其它点，并为它们填上“合适”的颜色，使相邻的点的颜色值都比较接近
        默认是渐变效果，如果是flat就不会：GL_SMOOTH， GL_FLAT
        ---
        我们可能希望把整个看到的图形画下来，但它只占据纸张的一部分，而不是全部。（视口变换）
        OpenGL 变换实际上是通过矩阵乘法来实现
        模型变换和视图变换--
            从“相对移动”的观点来看，改变观察点的位置与方向和改变物体本身的位置与方向具有等效性。
            在 OpenGL 中，实现这两种功能甚至使用的是同样的函数。
            对应shader中的model matrix 和 view matrix 
        qq we can remove translation part of mv matrix? y 
        实际变换的顺序与代码中写的顺序是相反的
        qq ((RT)v) = (R(Tv))的含义是？
        于“先移动后旋转”和“先旋转后移动”得到的结果很可能不同
        qq why designed like so? OpenGL 之所以这样设计，是为了得到更高的效率。
        ---
        投影变换 x2 basic
            glFrustum透视投影
                平接头体
            glOrtho正投影
                相当于在无限远处观察得到的结果，它只是一种理想状态。但对于计算机来说，使用正投影有可能
                    获得更好的运行速度
        ---
        我们在进行矩阵操作时，有可能需要先保存某个矩阵，过一段时间再恢复它。当我们需要保存时，
            调用 glPushMatrix 函数
        OpenGL 规定堆栈的容量至少可以 容纳 32 个矩阵
        通常，用这种先保存后恢复的措施，比先变换再逆变换要更方便，更快速。
        模型视图矩阵和投影矩阵都有相应的堆栈。使用 glMatrixMode 来指定当前操作的究竟是模
            型视图矩阵还是投影矩阵。
        *gluLookAt — define a viewing transformation
            creates a viewing matrix derived from its para. 
            qq gluLookAt is equivalent to? use glMultMatrixf
            https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluLookAt.xml
        ---回调函数？timer in Legacy opengl?
        *qq 举例说明我们自己的程序无法掌握究竟什么时候该绘制窗口?
            假如你的程序窗口碰巧被别的窗口遮住了，后来用户又把原
            来遮住的窗口移开，这时你的窗口需要重新绘制。很不幸的，你无法知道这一事件发生的具体时
            间。因此这一切只好委托操作系统来办了。
        glutIdleFunc(&myIdle);
        GLUT 工具包也提供了一个比较类似的函数：glutIdleFunc，表示在 CPU 空闲
            的时间调用某一函数。其实 GLUT 还提供了一些别的函数，例如“在键盘按下时做某事”等
        ...
        获得帧率？ 
            帧速就是一秒钟内播放的画面数目（FPS）。我们可以先测量绘制两幅画面之间时间 t，
            实际上可能还有别的方法实现这个
        通常 C 语言的 time 函数精确度一般只到一秒
        clock 函数也就到十毫秒左右
        +h-
            opengl2 legacy模式仅仅开放很少功能，后面opengl3等开放越来越多的可编程管线，包括后面的vulkan
            但是同时又有很多人用python或者其他语言简化编程的过程，这是为啥？或许并不矛盾？ pp-
            posi- 显示api的开放代表着硬件的提升，vulkan基本开放了整个过程。py抽象代表着软件的提升
                最终的结局是那个中间的东西--引擎。这是最重要的。--走进去又走出来的过程
        设置这些属性的艺术性远远超过了技术性，往往是一些美术制作人员设
            置好各种属性（并保存为文件），然后由程序员编写的程序去执行绘制工作
        可以玩玩类似 3DS MAX 之类的软件，对理解光照、熟悉各种属性设置会有一些帮助。
        --unity也是，起码是一种理解！ 不要完全不管！ 作为对照组！！！ 
    book-interactive computer graphics 6th edition shader based 
        // take a look at the contents first:
            https://www.pearson.com/us/higher-education/product/Angel-Interactive-Computer-Graphics-A-Top-Down-Approach-with-Shader-Based-Open-GL-6th-Edition/9780132545235.html?tab=contents
        ch01
            A Graphics System--Pixels and the Frame Buffer
            Light 
                Typical widgets include menus, scrollbars, and graphical buttons op45
            The Modeling–Rendering Paradigm
            Graphics Architectures
            ---
            Virtually all modern graphics systems are raster based
            The image we see on the output device is an array
            Detail of area around one eye showing individual pixels
            1-bit-deep frame buffer allows only two colors, whereas an 8-bit-deep frame
                buffer allows 28 (256) colors
            it can be viewed as core element 
            qq what is frame buffer? 
                the pixels are stored in a part of memory 
                a part of mem that stores color info. for rendering 
            In full-color systems, there are 24 (or more) bits per pixel.
            qq what is full-color system
            High dynamic range (HDR) systems use 12
                or more bits for each color component
            qq graphicsal func? what are needed? 
                to assign values to the pixels in the frame buffer that best represent
                these entities
            but to display its outline by the three line segments connecting the vertices, 
                the graphics system
                must generate a set of pixels that appear as line 
                segments to the viewer
            The conversion of geometric entities to pixel colors and locations in the frame buffer is known
                as rasterization, or scan conversion
            qq what is rasterization? 
            qq what could be inside a gpu mem? 
                custom-tailored to carry out specific graphics functions
            The frame buffer
                is accessed through the graphics processing unit and usually is on the same circuit
                board as the GPU.
            qq where is framebuffer typically? modern. 
            be used as mini supercomputers for general purpose computing
            The cathode-ray tube (CRT)
            Modern displays are no longer coupled to these low frequencies and operate at rates
                up to about 85 Hz
            Interlaced displays are used in commercial television
            Color CRTs have three different colored phosphors (red, green, and blue)
            Often called pointing devices, these devices allow a user to indicate a particular location on the display
            Another approach is to associate a function called a callback with a specific type
                of event
            to be realistic, we need lighting, shading, and properties of materials
            we discuss the way images are formed by optical systems
            The object exists in space independent of any image-formation process and of any viewer
            One of the main functions of
                a CAD system is to provide an interface that makes it easy for a user to 
                build a synthetic model of the world
            In the human visual system, the image is formed on the back of the eye. In a
                camera, the image is formed in the film plane
            A given light source has a color determined
                by the energy that it emits at various wavelengths
            those near 450 nm are seen as blue; and
                those near 650 nm are seen as red.
            A laser, for example, emits light at a single frequency, whereas an incandescent lamp
                emits energy over a range of frequencies
            visible spectrum
            Geometric optics models light sources as emitters of light energy
            More complex sources, such as a light bulb, can be characterized as emitting  
                light over an area and by emitting more light in one direction than another
            Modeling of light sources is discussed in Chapter 5.
            qq two ways of gen. images from graphics sys. 
                We can start building an imaging model by following light from a source
            A ray is a semi-infinite line
                that emanates from a point and travels to infinity in a particular direction
                *it can be in two dir. : ether start from light source or start from eye 
            figure 1.8 match rays with description 
            contribute to the image. 
            provide a close approximation to the physical world, it is usually not well suited for
                real-time computation
            surfaces that scatter the incoming light equally in all directions
            requires more computation than can be done in real time. 
            The human visual system is extremely
                complex but still obeys the physical principles of other optical imaging systems
            using the fact that the two triangles in Figure 1.20 are similar 
            light sensors and are located on the retina
            excited by electromagnetic energy
            The rods are low-level-light sensors that account for our night vision and are not
                color sensitive
            *qq what is the def. of the resolution? 
                Resolution is a measure of what
                size objects we can see. More technically, it is a measure of how close we can place two
                points and still recognize that there are two distinct points.
            qq what happends if the two light sources are emitting the same energy, but with diff. wavelength? 
                If these two lights were to emit the same energy, they
                would appear to us to have different brightness, because of the unequal response
                of the cones to red and green light.
            We are most sensitive to green light, and least
                sensitive to red and blue.
            work with just three basic, or primary, colors. We
                discuss color in depth in Chapter 2.
            The optic nerves  are connected to the rods and cones in an extremely complex arrangement
            sophisticated
            in the brain called the visual cortex
            where high-level functions, such as object recognition, are carried out
            *Once we have designed the scene, we want to render it, adding 
                light sources, material properties, and a variety of other detailed effects
            form a production-quality image
            render farm, a cluster of computers configured for numerical computing
            qq what can be included in a model? 
                Models, including the geometric objects, lights, cameras, and material properties
            We shall examine scene graphs in Chapter 8.
            adder and a multiplier
            calculation to the adder and can start its next multiplication while the adder carries
                out the second step of the calculation on the first set of data
            the throughput of the system, has been doubled
            *gpu:large sets of vertices and pixels must be processed
                in the same manner.
            Here we are content to  overview these steps and show that they can be pipelined
            




        ch02 -- GRAPHICS PROGRAMMING
            -all
            *2.8 The Gasket Program
            *Adding Interaction
            Double Buffering
        ch03 -- CHAPTER 3 GEOMETRIC OBJECTS AND TRANSFORMATIONS
            -all
            Quaternions
        ch04 
            Walking Through a Scene
        ch05 -- LIGHTING 
            -all 
            Polygonal Shading
            Per-Fragment Lighting
        ch06 -- CHAPTER 6 FROM VERTICES TO FRAGMENTS
            -rough 
        ch07 
            Texture Generation
            Environment Maps
            Antialiasing
            Back-to-Front and Front-to-Back Rendering
            Scene Antialiasing and Multisampling
        ch08 -- MODELING AND HIERARCHY
            -rough
        ch09 
            Physically Based Models and Particle Systems
            -rough
        ch10 -- CURVES AND SURFACES
            -all cad, mesh gen. 
        ch11 -- ADVANCED RENDERING -- RTX 
            Volume Rendering
    book-OpenGL.Programming.Guide.8th (red book )
    book-OpenGL superbible 7th
    book-_basic_interactive_7th edition
    spec-gl33
    spec-gl46 
    spec-vulkan1.2
    

    ...
            
            